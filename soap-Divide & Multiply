#client

from zeep import Client
client=Client('http://localhost:5000?wsdl')
result=client.service.multiply(6,4)
print(f'Result from SOAP service(multiply):{result}')
result=client.service.divide(6,4)
print(f'Result from SOAP service(divide):{result}')

#server

from spyne.application import Application
from spyne.decorator import rpc
from spyne.service import ServiceBase
from spyne.protocol.soap import Soap11
from spyne.server.wsgi import WsgiApplication
from spyne.model.primitive import Integer
from spyne.model.primitive import Double
from wsgiref.simple_server import make_server

def CalculatorService(ServiceBase):
    @rpc(Integer, Integer, _returns=Integer)
    def add_numbers(self, num1, num2):
        return num1*num2
    @rpc(Integer, Integer, _returns=Double)
    def divide(self, num1, num2):
        if num2 == 0:
            raise ValueError("Cannot divide by zero!")
        return num1/num2
    
soap_app=Application([CalculatorService], tns='example.soap', in_protocol=Soap11(validator='lxml'), out_protocol=Soap11())
wsgi_app=WsgiApplication(soap_app)
host='localhost'
port=5000

server=make_server(host, port, wsgi_app)
print(f'Listening on {host}:{port}')
server.serve_forever
